{"version":3,"sources":["hooks/usePostCountryService.ts","utils/constructApiQuery.ts","assets/constants/themes.ts","components/ThemeContext/ThemeContext.tsx","components/ThemeSwitch/ThemeSwitch.tsx","components/PageLayout/PageLayout.tsx","components/Search/Search.tsx","components/Filter/Filter.tsx","components/CountryFlag/CountryFlag.tsx","components/CountryCard/CountryCard.tsx","components/CountryList/CountryList.tsx","components/Home/Home.tsx","components/CountryBordersList/CountryBordersList.tsx","components/CountryDetailsList/CountryDetailsList.tsx","components/ButtonBack/ButtonBack.tsx","components/CountryDetails/CountryDetails.tsx","components/App/App.tsx","hooks/useLocation.ts","hooks/useApiControls.ts","index.tsx"],"names":["usePostCountryService","apiQuery","useState","status","result","setResult","useEffect","fetch","then","res","ok","Error","toString","json","payload","err","error","constructApiQuery","search","apiBase","apiFields","apiFieldsDetailed","type","query","dark","textColor","inputColor","elementColor","backgroundColor","light","ThemeContext","React","createContext","darkMode","colors","theme","toggle","ThemeProvider","children","setDarkMode","Provider","value","ThemeSwitch","useContext","onClick","className","PageLayout","style","color","Search","onChange","name","id","placeholder","target","Filter","onChoice","CountryFlag","src","alt","CountryCard","props","flag","population","toLocaleString","region","capital","CountryList","service","showDetails","length","map","country","i","key","alpha3Code","Home","searchByCountryName","searchByRegion","action","CountryBordersList","borderCodes","goToCountry","join","ind","CountryDetailsList","details","title","ButtonBack","e","CountryDetails","countryCode","goBack","setApiQuery","countryInfo","detailsSide","languages","currencies","nativeName","subregion","topLevelDomain","borders","App","location","currentView","setCurrentView","code","goHome","useLocation","searchByCode","searchByCodes","codes","useApiControls","apiQueryHome","homeService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6105e34.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Service } from \"types/Service\"\r\nimport { Country } from \"types/Country\"\r\n\r\nexport function usePostCountryService(apiQuery: string): Service<Country[]> {\r\n  const [result, setResult] = useState<Service<Country[]>>({\r\n    status: \"loading\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetch(apiQuery)\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          if (res.status === 404) return []\r\n          throw Error(res.status.toString())\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(\r\n        res => setResult({ status: \"loaded\", payload: res }),\r\n        err => setResult({ status: \"error\", error: err })\r\n      )\r\n  }, [apiQuery])\r\n\r\n  return result\r\n}\r\n","import { ApiSearch } from \"types/ApiSearch\"\r\n\r\nexport function constructApiQuery(search: ApiSearch) {\r\n  const apiBase = \"https://restcountries.eu/rest/v2\"\r\n  const apiFields = \"name;flag;population;region;capital;alpha3Code\"\r\n  const apiFieldsDetailed = `${apiFields};nativeName;subregion;topLevelDomain;currencies;languages;borders`\r\n  switch (search.type) {\r\n    case \"all\":\r\n      return \"responseSample.json\"\r\n    case \"name\":\r\n      return `${apiBase}/name/${search.query}?fields=${apiFields}`\r\n    case \"region\":\r\n      return `${apiBase}/region/${search.query}?fields=${apiFields}`\r\n    case \"code\":\r\n      return `${apiBase}/alpha/${search.query}?fields=${apiFieldsDetailed}`\r\n    case \"codes\":\r\n      return `${apiBase}/alpha/?codes=${search.query}&fields=name;alpha3Code`\r\n  }\r\n}\r\n","export default {\r\n  dark: {\r\n    textColor: \"hsl(0, 0%, 100%)\",\r\n    inputColor: \"hsl(0, 0%, 100%)\",\r\n    elementColor: \"hsl(209, 23%, 22%)\",\r\n    backgroundColor: \"hsl(207, 26%, 17%)\"\r\n  },\r\n  light: {\r\n    textColor: \"hsl(200, 15%, 8%)\",\r\n    inputColor: \"hsl(0, 0%, 52%)\",\r\n    elementColor: \"hsl(0, 0%, 100%)\",\r\n    backgroundColor: \"hsl(0, 0%, 98%)\"\r\n  }\r\n}\r\n","import React, { useState } from \"react\"\r\nimport theme from \"assets/constants/themes\"\r\n\r\nexport const ThemeContext = React.createContext({\r\n  darkMode: false,\r\n  colors: theme.light,\r\n  toggle: () => {},\r\n})\r\n\r\nexport const ThemeProvider: React.FC<{}> = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(true)\r\n\r\n  const toggle = () => {\r\n    const isDark = !darkMode\r\n    setDarkMode(isDark)\r\n  }\r\n\r\n  const colors = darkMode ? theme.dark : theme.light\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, colors, toggle }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport CrescentMoonIcon from \"@material-ui/icons/Brightness3\"\r\nimport SunIcon from \"@material-ui/icons/WbSunny\"\r\n\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\nimport \"./ThemeSwitch.css\"\r\n\r\nexport const ThemeSwitch: React.FC = () => {\r\n  const { darkMode, toggle } = useContext(ThemeContext)\r\n  return (\r\n    <button onClick={toggle} className=\"theme-toggle\">\r\n      {darkMode ? (\r\n        <>\r\n          <SunIcon className=\"theme-toggle__icon\" />\r\n          &nbsp;Day Mode\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CrescentMoonIcon className=\"theme-toggle__icon theme-toggle__icon--rotate\" />\r\n          &nbsp;Night Mode\r\n        </>\r\n      )}\r\n    </button>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\nimport { ThemeSwitch } from 'components/ThemeSwitch/ThemeSwitch'\r\n\r\nexport const PageLayout: React.FC<{}> = ({ children }) => {\r\n  const { colors } = useContext(ThemeContext)\r\n  return (\r\n    <div\r\n      className=\"page\"\r\n      style={{\r\n        color: colors.textColor,\r\n        backgroundColor: colors.backgroundColor,\r\n      }}\r\n    >\r\n      <header\r\n        className=\"page__header\"\r\n        style={{\r\n          backgroundColor: colors.elementColor,\r\n        }}\r\n      >\r\n        <h1 className=\"header__title\">Where in the world?</h1>\r\n        <ThemeSwitch />\r\n      </header>\r\n      <main className=\"page__content\">{children}</main>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\nimport \"./Search.css\"\r\n\r\ninterface Props {\r\n  onChange: Function\r\n}\r\n\r\nexport const Search: React.FC<Props> = ({ onChange }) => {\r\n  const { colors } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      className=\"controls__search\"\r\n      style={{\r\n        color: colors.inputColor,\r\n        backgroundColor: colors.elementColor,\r\n      }}\r\n    >\r\n      <SearchIcon />\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        id=\"search\"\r\n        placeholder=\"Search for a country...\"\r\n        onChange={({ target }) => onChange(target.value)}\r\n        className=\"search__input\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\n\r\ninterface Props {\r\n  onChoice: Function\r\n}\r\n\r\nexport const Filter: React.FC<Props> = ({ onChoice }) => {\r\n  const { colors } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <select\r\n      id=\"region\"\r\n      name=\"region\"\r\n      className=\"controls__filter\"\r\n      style={{\r\n        color: colors.textColor,\r\n        backgroundColor: colors.elementColor,\r\n      }}\r\n      onChange={({ target }) => onChoice(target.value)}\r\n    >\r\n      <option value=\"Africa\">Africa</option>\r\n      <option value=\"Americas\">Americas</option>\r\n      <option value=\"Asia\">Asia</option>\r\n      <option value=\"Europe\">Europe</option>\r\n      <option value=\"Oceania\">Oceania</option>\r\n    </select>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport './CountryFlag.css'\r\n\r\ninterface Props {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport const CountryFlag: React.FC<Props> = ({ src, alt }) => (\r\n  <figure className=\"c-country-flag\">\r\n    <img src={src} alt={alt} className=\"c-country-flag__img\" />\r\n  </figure>\r\n)\r\n","import React, { useContext } from \"react\"\r\n\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\nimport { Country } from \"types/Country\"\r\nimport { CountryFlag } from \"components/CountryFlag/CountryFlag\"\r\n\r\nimport \"./CountryCard.css\"\r\n\r\nexport const CountryCard: React.FC<Country> = props => {\r\n  const { colors } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{\r\n        color: colors.textColor,\r\n        backgroundColor: colors.elementColor,\r\n      }}\r\n    >\r\n      <div className=\"card__flag\">\r\n        <CountryFlag src={props.flag} alt={`${props.name}'s flag`} />\r\n      </div>\r\n      <div className=\"card__info\">\r\n        <p className=\"card__title\">{props.name}</p>\r\n        <span>Population: {props.population.toLocaleString()}</span>\r\n        <br />\r\n        <span>Region: {props.region}</span>\r\n        <br />\r\n        <span>Capital: {props.capital}</span>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Country } from \"types/Country\"\r\nimport { Service } from \"types/Service\"\r\nimport { CountryCard } from \"components/CountryCard/CountryCard\"\r\nimport \"./CountryList.css\"\r\n\r\ninterface Props {\r\n  service: Service<Country[]>\r\n  showDetails: Function\r\n}\r\n\r\nexport const CountryList: React.FC<Props> = ({ service, showDetails }) => (\r\n  <>\r\n    {service.status === \"loading\" && \"Loading...\"}\r\n    {service.status === \"loaded\" && (\r\n      <ul className=\"country-list\">\r\n        {service.payload && service.payload.length\r\n          ? service.payload.map((country: Country, i: number) => (\r\n              <li\r\n                key={i}\r\n                className={\r\n                  \"country-list__item\" + ((i === service.payload.length - 1)\r\n                    ? \" country-list__item--last\"\r\n                    : \"\")\r\n                }\r\n                onClick={() => showDetails(country.alpha3Code)}\r\n              >\r\n                <CountryCard {...country} />\r\n              </li>\r\n            ))\r\n          : \"Nothing found.\"}\r\n      </ul>\r\n    )}\r\n    {service.status === \"error\" && service.error.toString()}\r\n  </>\r\n)\r\n","import React from \"react\"\r\nimport { Search } from \"components/Search/Search\"\r\nimport { Filter } from \"components/Filter/Filter\"\r\nimport { CountryList } from \"components/CountryList/CountryList\"\r\nimport { Service } from \"types/Service\"\r\nimport { Country } from \"types/Country\"\r\n\r\ninterface Props {\r\n  service: Service<Country[]>\r\n  showDetails: Function\r\n  searchByCountryName: Function\r\n  searchByRegion: Function\r\n}\r\n\r\nexport const Home: React.FC<Props> = ({\r\n  service,\r\n  showDetails,\r\n  searchByCountryName,\r\n  searchByRegion,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form action=\"#\" className=\"controls\">\r\n        <Search onChange={searchByCountryName} />\r\n        <Filter onChoice={searchByRegion} />\r\n      </form>\r\n      <CountryList service={service} showDetails={showDetails} />\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { Country } from \"types/Country\"\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\nimport { constructApiQuery } from \"utils/constructApiQuery\"\r\nimport { usePostCountryService } from \"hooks/usePostCountryService\"\r\nimport { ApiSearch } from \"types/ApiSearch\"\r\n\r\ninterface Props {\r\n  borderCodes: Array<string>\r\n  goToCountry: (countryCode: string) => void\r\n}\r\n\r\nexport const CountryBordersList: React.FC<Props> = ({\r\n  borderCodes,\r\n  goToCountry,\r\n}) => {\r\n  const { colors } = useContext(ThemeContext)\r\n\r\n  const search: ApiSearch = { type: \"codes\", query: borderCodes.join(\";\") }\r\n  const apiQuery = constructApiQuery(search)\r\n  const service = usePostCountryService(apiQuery)\r\n\r\n  return (\r\n    <ul className=\"c-country-borders__list\">\r\n      {service.status === \"loading\" && \"Loading...\"}\r\n      {service.status === \"loaded\" && (\r\n        <>\r\n          {service.payload.map(\r\n            (country: Pick<Country, \"name\" | \"alpha3Code\">, ind: number) => (\r\n              <li className=\"c-country-borders__item\" key={ind}>\r\n                <button\r\n                  className=\"c-btn\"\r\n                  onClick={() => goToCountry(country.alpha3Code)}\r\n                  style={{\r\n                    color: colors.textColor,\r\n                    backgroundColor: colors.elementColor,\r\n                  }}\r\n                >\r\n                  {country.name}\r\n                </button>\r\n              </li>\r\n            )\r\n          )}\r\n        </>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\ninterface Detail {\r\n  title: string\r\n  value: string | number\r\n}\r\n\r\ninterface Props {\r\n  details: Array<Detail>\r\n}\r\n\r\nexport const CountryDetailsList: React.FC<Props> = ({ details }) => (\r\n  <ul className=\"c-details-list\">\r\n    {details.map(({ title, value }, ind) => (\r\n      <li className=\"c-details-list__item\" key={ind}>\r\n        <span className=\"h-bold\">{title}:&nbsp;</span>\r\n        {value}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n)\r\n","import React, { useContext } from \"react\"\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\"\r\nimport { ThemeContext } from \"components/ThemeContext/ThemeContext\"\r\nimport \"./ButtonBack.css\"\r\n\r\nexport const ButtonBack: React.FC<{ onClick: Function }> = ({ onClick }) => {\r\n  const { colors } = useContext(ThemeContext)\r\n  return (\r\n    <button\r\n      className=\"c-btn c-btn--control\"\r\n      onClick={e => onClick(e)}\r\n      style={{\r\n        color: colors.textColor,\r\n        backgroundColor: colors.elementColor,\r\n      }}\r\n    >\r\n      <KeyboardBackspaceIcon />\r\n      Back\r\n    </button>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\nimport { Detail } from \"types/Detail\"\nimport { CountryInfo } from \"types/CountryInfo\"\nimport { ApiSearch } from \"types/ApiSearch\"\nimport { constructApiQuery } from \"utils/constructApiQuery\"\nimport { usePostCountryService } from \"hooks/usePostCountryService\"\nimport { CountryBordersList } from \"components/CountryBordersList/CountryBordersList\"\nimport { CountryDetailsList } from \"components/CountryDetailsList/CountryDetailsList\"\nimport { CountryFlag } from \"components/CountryFlag/CountryFlag\"\nimport { ButtonBack } from \"components/ButtonBack/ButtonBack\"\n\nimport \"./CountryDetails.css\"\n\ninterface Props {\n  countryCode: string\n  goBack: () => void\n  goToCountry: (countryCode: string) => void\n}\n\nexport const CountryDetails: React.FC<Props> = ({\n  countryCode,\n  goBack,\n  goToCountry,\n}) => { /* TODO: Refactor logic out of the component */\n  const search: ApiSearch = { type: \"code\", query: countryCode }\n  const [apiQuery, setApiQuery] = useState(constructApiQuery(search))\n\n  useEffect(() => setApiQuery(constructApiQuery(search)), [search])\n\n  const service = usePostCountryService(apiQuery)\n\n  let countryInfo: CountryInfo = { ...service.payload }\n  let details: Array<Detail> = []\n  let detailsSide: Array<Detail> = []\n  let languages = []\n  let currencies = []\n  const separator = \", \"\n\n  if (\n    service.status === \"loaded\" &&\n    service.payload &&\n    service.payload.languages\n  ) {\n    languages = countryInfo.languages.map(({ name }) => name)\n    currencies = countryInfo.currencies.map(({ name }) => name)\n    details = [\n      { title: \"Native name\", value: countryInfo.nativeName },\n      { title: \"Population\", value: countryInfo.population.toLocaleString() },\n      { title: \"Region\", value: countryInfo.region },\n      { title: \"Subregion\", value: countryInfo.subregion },\n      { title: \"Capital\", value: countryInfo.capital },\n    ]\n    detailsSide = [\n      {\n        title: \"Top level domain\",\n        value: countryInfo.topLevelDomain.join(separator),\n      },\n      { title: \"Currencies\", value: currencies.join(separator) },\n      { title: \"Languages\", value: languages.join(separator) },\n    ]\n  }\n\n  return (\n    <div className=\"c-country-details\">\n      <div className=\"c-controls\">\n        <ButtonBack onClick={() => goBack()} />\n      </div>\n      {service.status === \"loading\" && \"Loading\"}\n      {service.status === \"loaded\" && (\n        <div className=\"c-country-details__content\">\n          <div className=\"c-country-details__flag\">\n            <CountryFlag\n              src={countryInfo.flag}\n              alt={`${countryInfo.name}'s flag.`}\n            />\n          </div>\n          <div className=\"c-country-details__text-info\">\n            <header className=\"c-country-details__header\">\n              {countryInfo.name}\n            </header>\n            <div className=\"l-list-container\">\n              <CountryDetailsList details={details} />\n              <CountryDetailsList details={detailsSide} />\n            </div>\n            <div className=\"c-country-borders\">\n              <header className=\"c-country-borders__header\">\n                Border Countries:&nbsp;\n              </header>\n              {countryInfo.borders.length === 0 ? (\n                \"None\"\n              ) : (\n                <CountryBordersList\n                  borderCodes={countryInfo.borders}\n                  goToCountry={goToCountry}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      {service.status === \"error\" && service.error.toString()}\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { usePostCountryService } from \"hooks/usePostCountryService\"\nimport { useLocation } from \"hooks/useLocation\"\nimport { useApiControls } from \"hooks/useApiControls\"\nimport { ThemeProvider } from \"components/ThemeContext/ThemeContext\"\nimport { PageLayout } from \"components/PageLayout/PageLayout\"\nimport { Home } from \"components/Home/Home\"\nimport { CountryDetails } from \"components/CountryDetails/CountryDetails\"\n\nimport \"./App.css\"\n\nexport const App: React.FC = () => {\n  const { currentView, showDetails, goHome } = useLocation()\n\n  const {\n    apiQuery: apiQueryHome,\n    searchByCountryName,\n    searchByRegion,\n  } = useApiControls()\n  const homeService = usePostCountryService(apiQueryHome)\n\n  return (\n    <ThemeProvider>\n      <PageLayout>\n        {currentView.location === \"home\" && (\n          <Home\n            service={homeService}\n            showDetails={showDetails}\n            searchByCountryName={searchByCountryName}\n            searchByRegion={searchByRegion}\n          />\n        )}\n        {currentView.location === \"details\" && (\n          <CountryDetails\n            countryCode={currentView.code}\n            goBack={goHome}\n            goToCountry={showDetails}\n          />\n        )}\n      </PageLayout>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { useState } from \"react\"\r\nimport { View } from \"types/View\"\r\n\r\nexport function useLocation() {\r\n  const [currentView, setCurrentView] = useState<View>({\r\n    location: \"home\",\r\n  })\r\n\r\n  const goHome = (): void => setCurrentView({ location: \"home\" })\r\n\r\n  const showDetails = (countryCode: string): void => {\r\n    setCurrentView({ location: \"details\", code: countryCode })\r\n  }\r\n\r\n  return { currentView, showDetails, goHome }\r\n}\r\n","import { useState } from \"react\"\r\nimport { constructApiQuery } from \"utils/constructApiQuery\"\r\n\r\nexport function useApiControls() {\r\n  const [apiQuery, setApiQuery]: [string, Function] = useState(\r\n    constructApiQuery({ type: \"all\" })\r\n  )\r\n\r\n  const searchByCountryName = (name: string): void => {\r\n    if (!name) setApiQuery(\"responseSample.json\")\r\n    if (name.length < 3) return\r\n\r\n    setApiQuery(constructApiQuery({ type: \"name\", query: name }))\r\n  }\r\n\r\n  const searchByRegion = (region: string): void => {\r\n    if (!region) return\r\n    setApiQuery(constructApiQuery({ type: \"region\", query: region }))\r\n  }\r\n\r\n  const searchByCode = (code: string): void => {\r\n    if (!code) return\r\n    setApiQuery(constructApiQuery({ type: \"code\", query: code }))\r\n  }\r\n\r\n  const searchByCodes = (codes: string): void => {\r\n    if (!codes) return\r\n    setApiQuery(constructApiQuery({ type: \"codes\", query: codes }))\r\n  }\r\n\r\n  return {\r\n    apiQuery,\r\n    searchByCountryName,\r\n    searchByRegion,\r\n    searchByCode,\r\n    searchByCodes,\r\n  }\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"components/App/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}